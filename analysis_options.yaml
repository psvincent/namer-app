# OWN NOTES >>

# This file determines how strict Flutter should be when analyzing your code. 
# Since this is your first foray into Flutter, you're telling the analyzer to take it easy. 
# You can always tune this later. In fact, as you get closer to publishing an actual production app, you will almost certainly want to make the analyzer stricter than this.

# This file tells the Dart analyzer to take it easy when telling you all the different little things that could be done better.
# The Dart Analyzer is a static analysis engine.
# There are a lot of links that are good to have on if you are a seasoned Dart or Flutter developer.
# Since this is the first project with Dart and Flutter you want the 'linter' to take it easy.
# It saying false, is basically telling us not to worry about them.

include: package:flutter_lints/flutter.yaml

linter:
  rules:
    avoid_print: false
    prefer_const_constructors_in_immutables: false
    prefer_const_constructors: false
    prefer_const_literals_to_create_immutables: false
    prefer_final_fields: false
    unnecessary_breaks: true
    use_key_in_widget_constructors: false


















# ORIGINAL FILE CONTENT >>>>>>
# DOUBLE HASHTAGS ARE THINGS THAT WERE NOT COMMENTS ORIGINALLY

# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
## include: package:flutter_lints/flutter.yaml

## linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  ## rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
